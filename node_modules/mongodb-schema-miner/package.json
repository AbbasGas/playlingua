{
  "name": "mongodb-schema-miner",
  "version": "0.0.1",
  "description": "Generate schemas from MongoDB collections",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/aheckmann/mongodb-schema-miner.git"
  },
  "keywords": [
    "mongodb",
    "schema",
    "collection"
  ],
  "author": {
    "name": "Aaron Heckmann",
    "email": "aaron.heckmann+github@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "mongodb": "1.3.5",
    "debug": "0.7.2"
  },
  "devDependencies": {
    "mocha": "1.9.x"
  },
  "bugs": {
    "url": "https://github.com/aheckmann/mongodb-schema-miner/issues/new"
  },
  "homepage": "https://github.com/aheckmann/mongodb-schema-miner/",
  "readme": "#mongodb-schema-miner\n\nGenerate schemata from MongoDB collections\n\n[![Build Status](https://travis-ci.org/aheckmann/mongodb-schema-miner.png)](https://travis-ci.org/aheckmann/mongodb-schema-miner)\n\n##Use\n\n```\n$ npm install mongodb-schema-miner\n```\n\n```js\nvar miner = require('mongodb-schema-miner');\nvar uri = 'mongodb://someHost:port/database';\n\nminer(uri, { collection: YOUR_COLLECTION_NAME }, function (err, schema) {\n  console.log('my schema:', schema.toObject());\n\n  // { _id: 'ObjectId',\n  //   name: { last: 'String', first: 'String', meta: { number: 'Number' } },\n  //   a: [ { x: 'Number', y: 'Number' } ],\n  //   two: 'String',\n  //   date: 'Date',\n  //   oid: 'ObjectId',\n  //   bin: 'Binary',\n  //   int: 'Number',\n  //   long: 'Long',\n  //   mixed: 'Mixed',\n  //   code: 'Code',\n  //   docs: [ { _id: 'ObjectId', name: 'String' } ],\n  //   strings: [ 'String' ],\n  //   dates: [ 'Date' ],\n  //   arrayOfArray: [ [ 'Number' ] ] }\n})\n```\n\nBy default the first 1000 documents are analyzed. Adjust the number of documents to analyze by setting the `limit` option:\n\n```js\nvar options = {};\noptions.collection = YOUR_COLLECTION_NAME;\noptions.limit = 2500;\n\nminer(uri, options, function (err, schema) {\n  console.log('my schema:', schema.toObject());\n})\n```\n\nAnalyze specific fields:\n\n```js\nvar options = {};\noptions.collection = YOUR_COLLECTION_NAME;\noptions.fields = { _id: 0, content: 1, created: 1 };\n\nminer(uri, options, function (err, schema) {\n  console.log('my schema:', schema.toObject());\n\n  // { content: 'String'\n  //   created: 'Date' }\n})\n```\n\nUse a custom query to filter for documents you care about:\n\n```js\nvar options = {};\noptions.collection = YOUR_COLLECTION_NAME;\noptions.query = { count: { $gt: 0 }};\n\nminer(uri, options, function (err, schema) {\n  console.log('my schema:', schema.toObject());\n\n  // { _id: 'ObjectId',\n  //   ..\n  //   count: 'Number' }\n})\n```\n\nOverride the type returned by `mongodb-schema-miner`:\n\n```js\nvar options = {};\noptions.collection = YOUR_COLLECTION_NAME;\noptions.onType = function (type) {\n  if ('Code' == type) {\n    return 'Function';\n  }\n\n  return type;\n}\n\nminer(uri, options, function (err, schema) {\n  console.log('my schema:', schema.toObject());\n\n  // { _id: 'ObjectId',\n  //   ..\n  //   code: 'Function' }\n})\n```\n\n##License\n\n[MIT](https://github.com/aheckmann/mongodb-schema-miner/blob/master/LICENSE)\n\n\n\n",
  "readmeFilename": "README.md",
  "_id": "mongodb-schema-miner@0.0.1",
  "dist": {
    "shasum": "394ef0608bcfac608a7b879151035f55f3814bba",
    "tarball": "http://registry.npmjs.org/mongodb-schema-miner/-/mongodb-schema-miner-0.0.1.tgz"
  },
  "_from": "mongodb-schema-miner@*",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "aaron",
    "email": "aaron.heckmann+github@gmail.com"
  },
  "maintainers": [
    {
      "name": "aaron",
      "email": "aaron.heckmann+github@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "394ef0608bcfac608a7b879151035f55f3814bba",
  "_resolved": "https://registry.npmjs.org/mongodb-schema-miner/-/mongodb-schema-miner-0.0.1.tgz"
}
